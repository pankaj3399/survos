<?php

namespace ContainerXqwT76M;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContentManagerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Stenope\Bundle\ContentManager' shared service.
     *
     * @return \Stenope\Bundle\ContentManager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/stenope/stenope/src/ContentManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/stenope/stenope/src/ContentManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/stenope/stenope/src/ExpressionLanguage/ExpressionLanguage.php';
        include_once \dirname(__DIR__, 4).'/vendor/stenope/stenope/src/Behaviour/HtmlCrawlerManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/stenope/stenope/src/Service/NaiveHtmlCrawlerManager.php';

        $a = ($container->privates['debug.serializer'] ?? self::getDebug_SerializerService($container));

        $container->privates['Stenope\\Bundle\\ContentManager'] = $instance = new \Stenope\Bundle\ContentManager($a, $a, ($container->privates['Stenope\\Bundle\\Service\\NaiveHtmlCrawlerManager'] ??= new \Stenope\Bundle\Service\NaiveHtmlCrawlerManager()), new RewindableGenerator(fn () => new \EmptyIterator(), 0), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Stenope\\Bundle\\Processor\\LastModifiedProcessor'] ?? $container->load('getLastModifiedProcessorService'));
            yield 1 => ($container->privates['Stenope\\Bundle\\Processor\\SlugProcessor'] ??= new \Stenope\Bundle\Processor\SlugProcessor('slug'));
            yield 2 => ($container->privates['Stenope\\Bundle\\Processor\\HtmlIdProcessor'] ?? $container->load('getHtmlIdProcessorService'));
            yield 3 => ($container->privates['Stenope\\Bundle\\Processor\\HtmlAnchorProcessor'] ?? $container->load('getHtmlAnchorProcessorService'));
            yield 4 => ($container->privates['Stenope\\Bundle\\Processor\\HtmlExternalLinksProcessor'] ?? $container->load('getHtmlExternalLinksProcessorService'));
            yield 5 => ($container->privates['Stenope\\Bundle\\Processor\\ExtractTitleFromHtmlContentProcessor'] ?? $container->load('getExtractTitleFromHtmlContentProcessorService'));
            yield 6 => ($container->privates['Stenope\\Bundle\\Processor\\CodeHighlightProcessor'] ?? $container->load('getCodeHighlightProcessorService'));
            yield 7 => ($container->privates['Stenope\\Bundle\\Processor\\ResolveContentLinksProcessor'] ?? $container->load('getResolveContentLinksProcessorService'));
            yield 8 => ($container->privates['Stenope\\Bundle\\Processor\\AssetsProcessor'] ?? $container->load('getAssetsProcessorService'));
            yield 9 => ($container->privates['Stenope\\Bundle\\Processor\\TableOfContentProcessor'] ?? $container->load('getTableOfContentProcessorService'));
        }, 10), ($container->privates['property_accessor'] ?? self::getPropertyAccessorService($container)), new \Stenope\Bundle\ExpressionLanguage\ExpressionLanguage(new RewindableGenerator(fn () => new \EmptyIterator(), 0)), ($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true)));

        $instance->setContentManager($instance);

        return $instance;
    }
}
